(* @NESTEDCOMMENTS := 'Yes' *)
(* @PATH := '\/Structures' *)
(* @OBJECTFLAGS := '0, 8' *)
TYPE para_ts:
(***********************************************)
(*  DON'T MAKE ANY CHANGES TO THIS STRUCTURE!! *)
(*      FILE WAS AUTOMATICALLY GENERATED!!     *)
(***********************************************)
STRUCT

(* Basic *)
   Input_to_Output_Mode_s16: INT;           (* Not Active  (0 - 2) *)
   test_par_new_s16        : INT;           (* Not Active  (0 - 2) *)
   test_params_s16         : INT;           (* Not Active  (0 - 2) *)
   test_par2_s16           : INT;           (* Not Active  (0 - 2) *)

(* Test Type *)
   Trimming_type_s16       : INT;           (* 53  (0 - 511) *)
   Analog_type_s16         : INT;           (* 245  (53 - ) *)
   Curve_Type_s16          : INT;           (* 245  (66 - 67) *)
   Function_Type_s16       : INT;           (* 248  (248 - 254) *)
   Percent_Type_s16        : INT;           (* 0 % (0 - 1000) *)
   Ramp_Type_s16           : INT;           (* 0 % (0 - 100) *)
   Switch_Type_s16         : INT;           (* 1  ( - ) *)
   List_Type_s16           : INT;           (* AOC  (3 - 2) *)

(* Output Cfg 1-8 *)
   Out_Cfg_01_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_02_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_03_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_04_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_05_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_06_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_07_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_08_s16          : INT;           (* PWM  (1 - 2) *)

(* Output Cfg 9-16 *)
   Out_Cfg_09_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_10_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_11_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_12_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_13_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_14_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_15_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_16_s16          : INT;           (* PWM  (1 - 2) *)

(* Output Cfg 17-24 *)
   Out_Cfg_17_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_18_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_19_s16          : INT;           (* Not Active  (0 - 2) *)
   Out_Cfg_20_s16          : INT;           (* Not Active  (0 - 2) *)
   Out_Cfg_21_s16          : INT;           (* Not Active  (0 - 2) *)
   Out_Cfg_22_s16          : INT;           (* Not Active  (0 - 2) *)
   Out_Cfg_23_s16          : INT;           (* Not Active  (0 - 2) *)
   Out_Cfg_24_s16          : INT;           (* Not Active  (0 - 2) *)

(* Output Cfg 25-32 *)
   Out_Cfg_25_s16          : INT;           (* Not Active  (0 - 2) *)
   Out_Cfg_26_s16          : INT;           (* Not Active  (0 - 2) *)
   Out_Cfg_27_s16          : INT;           (* Not Active  (0 - 2) *)
   Out_Cfg_28_s16          : INT;           (* Not Active  (0 - 2) *)
   Out_Cfg_29_s16          : INT;           (* Not Active  (0 - 2) *)
   Out_Cfg_30_s16          : INT;           (* Not Active  (0 - 2) *)
   Out_Cfg_31_s16          : INT;           (* Not Active  (0 - 2) *)
   Out_Cfg_32_s16          : INT;           (* Not Active  (0 - 2) *)

(* Output Cfg 33-40 *)
   Out_Cfg_33_s16          : INT;           (* PWM  (2 - 2) *)
   Out_Cfg_34_s16          : INT;           (* PWM  (2 - 2) *)
   Out_Cfg_35_s16          : INT;           (* PWM  (2 - 2) *)
   Out_Cfg_36_s16          : INT;           (* PWM  (2 - 2) *)
   Out_Cfg_37_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_38_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_39_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_40_s16          : INT;           (* PWM  (1 - 2) *)

(* Output Cfg 41-47 *)
   Out_Cfg_41_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_42_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_43_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_44_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_45_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_46_s16          : INT;           (* PWM  (1 - 2) *)
   Out_Cfg_47_s16          : INT;           (* AOV  (3 - 2) *)

(* AOV Configuration *)
   AOV_Debounce_s16        : INT;           (* 200 ms (50 - 250) *)
   AOV_Freq_s16            : INT;           (* 80  (0 - 5000) *)
   AOV_Res_Min_s16         : INT;           (* 0 Ohm (0 - 3000) *)
   AOV_Res_Max_s16         : INT;           (* 0 Ohm (0 - 3000) *)
   AOV_Kp_s16              : INT;           (* 250  (0 - 2000) *)
   AOV_Ki_s16              : INT;           (* 250  (0 - 500) *)

(* AOC Configuration *)
   AOC_Debounce_s16        : INT;           (* 200 ms (50 - 250) *)
   AOC_Freq_s16            : INT;           (* 5000  (0 - 5000) *)
   AOC_Res_Min_s16         : INT;           (* 0 Ohm (0 - 3000) *)
   AOC_Res_Max_s16         : INT;           (* 0 Ohm (0 - 3000) *)
   AOC_Kp_s16              : INT;           (* 250  (0 - 2000) *)
   AOC_Ki_s16              : INT;           (* 250  (0 - 500) *)

(* Output Value 1-8 *)
   Out_Val_01_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_02_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_03_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_04_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_05_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_06_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_07_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_08_s16          : INT;           (* 0 % / mA (0 - 10000) *)

(* Output Value 9-16 *)
   Out_Val_09_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_10_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_11_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_12_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_13_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_14_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_15_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_16_s16          : INT;           (* 0 % / mA (0 - 10000) *)

(* Output Value 17-36 *)
   Out_Val_17_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_18_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_33_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_34_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_35_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_36_s16          : INT;           (* 0 % / mA (0 - 10000) *)

(* Output Value 37-44 *)
   Out_Val_37_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_38_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_39_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_40_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_41_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_42_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_43_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_44_s16          : INT;           (* 0 % / mA (0 - 10000) *)

(* Output Value 45-47 *)
   Out_Val_45_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_46_s16          : INT;           (* 0 % / mA (0 - 10000) *)
   Out_Val_47_s16          : INT;           (* 0 % / mA (0 - 20000) *)

(* POH Configuration *)
   POH_Debounce_s16        : INT;           (* 100 ms (50 - 250) *)
   POH_Res_Min_s16         : INT;           (* 2 Ohm (0 - 3000) *)
   POH_Res_Max_s16         : INT;           (* 52 Ohm (0 - 3000) *)
   POH_Kp_s16              : INT;           (* 250  (0 - 2000) *)
   POH_Ki_s16              : INT;           (* 250  (0 - 500) *)

(* POL Configuration *)
   POL_Debounce_s16        : INT;           (* 100 ms (50 - 250) *)
   POL_Res_Min_s16         : INT;           (* 2 Ohm (0 - 3000) *)
   POL_Res_Max_s16         : INT;           (* 52 Ohm (0 - 3000) *)
   POL_Kp_s16              : INT;           (* 250  (0 - 2000) *)
   POL_Ki_s16              : INT;           (* 250  (0 - 500) *)

(* DOH Configuration *)
   DOH_Debounce_s16        : INT;           (* 200 ms (50 - 250) *)
   DOH_Res_Min_s16         : INT;           (* 6 Ohm (0 - 3000) *)
   DOH_Res_Max_s16         : INT;           (* 44 Ohm (0 - 3000) *)
END_STRUCT
END_TYPE
(* @END_DECLARATION := '0' *)
